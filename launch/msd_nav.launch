<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!--node pkg="tf" type="static_transform_publisher" name="laser_frame_connect" args="0.3 0 0.05 0 0 0 base_link laser 10" /-->

  <node pkg="msd_exhibition" type="to_esp.py" name="to_esp" output="screen"/>
  <!-- Load robot description and start state publisher-->
  <param name="robot_description" textfile="$(find cartgrapher_navigation)/urdf/robot_model.urdf" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
      
      <!-- Start RPLIDAR sensor node which provides LaserScan data  -->
  <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
      <param name="serial_port" type="string" value="/dev/RPLIDARS1"/>
      <!--<param name="serial_baudrate" type="int" value="115200"/>-->
      <param name="serial_baudrate"     type="int"    value="256000"/>
      <param name="frame_id" type="string" value="laser"/>
      <param name="inverted" type="bool" value="true"/>
      <param name="angle_compensate" type="bool" value="true"/>
      <remap from="scan" to="/scan_raw" />
  </node>

  <node pkg="ira_laser_tools" name="laserscan_multi_merger1" type="laserscan_multi_merger" output="screen">
	<param name="destination_frame" value="laser"/>
	<param name="cloud_destination_topic" value="/pointcloud1"/>
	<param name="scan_destination_topic" value="/scan1"/>
	<param name="laserscan_topics" value ="/scan_raw" />
	<param name="angle_min" value="-3.14"/>
	<param name="angle_max" value="-2.84"/>
	<param name="angle_increment" value="0.0058"/>
	<param name="scan_time" value="0.0333333"/>
	<param name="range_min" value="0.30"/>
	<param name="range_max" value="50.0"/>
  </node>

 <node pkg="ira_laser_tools" name="laserscan_multi_merger2" type="laserscan_multi_merger" output="screen">
	<param name="destination_frame" value="laser"/>
	<param name="cloud_destination_topic" value="/pointcloud2"/>
	<param name="scan_destination_topic" value="/scan2"/>
	<param name="laserscan_topics" value ="/scan_raw" />
	<param name="angle_min" value="-1.4"/>
	<param name="angle_max" value="1.4"/>
	<param name="angle_increment" value="0.0058"/>
	<param name="scan_time" value="0.0333333"/>
	<param name="range_min" value="0.30"/>
	<param name="range_max" value="50.0"/>
  </node>

  <node pkg="ira_laser_tools" name="laserscan_multi_merger3" type="laserscan_multi_merger" output="screen">
	<param name="destination_frame" value="laser"/>
	<param name="cloud_destination_topic" value="/pointcloud3"/>
	<param name="scan_destination_topic" value="/scan3"/>
	<param name="laserscan_topics" value ="/scan_raw" />
	<param name="angle_min" value="1.57"/>
	<param name="angle_max" value="3.14"/>
	<param name="angle_increment" value="0.0058"/>
	<param name="scan_time" value="0.0333333"/>
	<param name="range_min" value="0.30"/>
	<param name="range_max" value="50.0"/>
  </node>

  <node pkg="ira_laser_tools" name="laserscan_multi_merger4" type="laserscan_multi_merger" output="screen">
	<param name="destination_frame" value="laser"/>
	<param name="cloud_destination_topic" value="/pointcloud_merge"/>
	<param name="scan_destination_topic" value="/scan"/>
	<param name="laserscan_topics" value =" /scan2" />
	<param name="angle_min" value="-3.14"/>
	<param name="angle_max" value="3.14"/>
	<param name="angle_increment" value="0.0058"/>
	<param name="scan_time" value="0.0333333"/>
	<param name="range_min" value="0.30"/>
	<param name="range_max" value="50.0"/>
  </node>



  
  <!-- outdoor -->
  <node name="cartographer_node" pkg="cartographer_ros" type="cartographer_node" args="
          -configuration_directory
              $(find cartgrapher_navigation)/configuration_files
          -configuration_basename outdoor_2d.lua" output="screen">
  </node>
  
      <!-- Additional node which converts Cartographer map into ROS occupancy grid map. Not used and can be skipped in this case -->
  <!--<node name="cartographer_occupancy_grid_node" pkg="cartographer_ros" type="cartographer_occupancy_grid_node" args="-resolution 0.05" />-->
  <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros" type="cartographer_occupancy_grid_node" args="-resolution 0.15" />
  
  <!-- move base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
      <rosparam file="$(find cartgrapher_navigation)/param/costmap_common_params.yaml" command="load" ns="global_costmap"/>
      <rosparam file="$(find cartgrapher_navigation)/param/costmap_common_params.yaml" command="load" ns="local_costmap"/>
      <rosparam file="$(find cartgrapher_navigation)/param/local_costmap_params.yaml" command="load"/>
      <rosparam file="$(find cartgrapher_navigation)/param/global_costmap_params.yaml" command="load"/>
      <!--<rosparam file="$(find cartgrapher_navigation)/param/base_local_planner_params.yaml" command="load"/>-->
      <rosparam file="$(find cartgrapher_navigation)/param/dwa_local_planner_params.yaml" command="load" />
      <rosparam file="$(find cartgrapher_navigation)/param/move_base_params.yaml" command="load"/>
  </node>


  
  <!-- Start RViz with custom view -->
  <node pkg="rviz" type="rviz" name="show_rviz" args="-d $(find cartgrapher_navigation)/rviz/navigation.rviz"/>    

</launch>
